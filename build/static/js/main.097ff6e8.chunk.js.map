{"version":3,"sources":["components/CurrentSettingsDisplay.js","components/TimerSettings.js","components/TimerDisplay.js","components/Beeper.js","components/TimerDriver.js","components/App.js","index.js"],"names":["CurrentSettingsDisplay","react_default","a","createElement","Table","color","inverted","textAlign","size","Header","Row","HeaderCell","colSpan","Body","Cell","this","props","prepareTime","timeLeft","initialRestingDuration","cycles","React","Component","TimerSettings","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","open","setState","close","handleSubmit","state","handleChange","e","_ref","name","value","defineProperty","Number","prepMinutes","prepSeconds","climbMinutes","climbSeconds","restMinutes","restSeconds","reduceRestByPercent","Modal","onClose","trigger","Button","onClick","basic","fluid","circular","centered","Content","Form","unstackable","widths","onSubmit","Group","inline","Field","Input","placeholder","type","onChange","label","Timer","colorOfSeconds","climberActivity","key","Math","ceil","currentCycleIndex","lastCycleIndex","id","style","backgroundColor","setPause","secondsLeft","Beeper","duration","oscillator","createOscillator","gainNode","createGain","connect","destination","gain","noteOn","start","setTimeout","noteOff","stop","window","audioContext","AudioContext","webkitAudioContext","TimerDriver","pause","endCycleAt","Date","now","currentTime","resetTimer","restingDuration","beepAndVibrate","beeper","navigator","vibrate","changeActivity","countdown","console","log","activities","restingTime","futureRest","round","prevProps","nextState","floated","attached","components_TimerDisplay","App","handleDataFromSettings","data","components_CurrentSettingsDisplay","components_TimerSettings","components_TimerDriver","ReactDOM","render","src_components_App","document","querySelector"],"mappings":"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","file":"static/js/main.097ff6e8.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Table } from \"semantic-ui-react\";\r\n\r\nclass CurrentSettingsDisplay extends React.Component {\r\n     \r\n\r\n    render() {\r\n        return (\r\n            <Table color='purple' inverted textAlign='center' size='large'>\r\n                <Table.Header>\r\n                    <Table.Row>\r\n                        <Table.HeaderCell colSpan='2'>Current settings</Table.HeaderCell>\r\n                    </Table.Row>\r\n                </Table.Header>\r\n\r\n                <Table.Body>\r\n                    <Table.Row>\r\n                        <Table.Cell>Prepare:</Table.Cell>\r\n                        <Table.Cell>{this.props.prepareTime+\" seconds\"}</Table.Cell>\r\n                    </Table.Row>\r\n                    <Table.Row>\r\n                        <Table.Cell>Climbing:</Table.Cell>\r\n                        <Table.Cell>{this.props.timeLeft+\" seconds\"}</Table.Cell>\r\n                    </Table.Row>\r\n                    <Table.Row>\r\n                        <Table.Cell>Resting:</Table.Cell>\r\n                        <Table.Cell>{this.props.initialRestingDuration+\" seconds\"}</Table.Cell>\r\n                    </Table.Row>\r\n                    <Table.Row>\r\n                        <Table.Cell>Cycles:</Table.Cell>\r\n                        <Table.Cell>{this.props.cycles / 2 + \" cycles\"}</Table.Cell>\r\n                    </Table.Row>\r\n                </Table.Body>\r\n            </Table>\r\n        );\r\n    };\r\n\r\n};\r\n\r\nexport default CurrentSettingsDisplay;","import React from 'react';\r\nimport { Modal, Button, Input, Form } from \"semantic-ui-react\";\r\n\r\nclass TimerSettings extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            prepMinutes: 0,\r\n            prepSeconds: 5,\r\n            climbMinutes: 2,\r\n            climbSeconds: 0,\r\n            restMinutes: 2,\r\n            restSeconds: 0,\r\n            cycles: 4,\r\n            reduceRestByPercent: 50,\r\n            open: false\r\n        };\r\n        \r\n    };\r\n\r\n    open = () => this.setState({ open: true })\r\n    close = () => this.setState({ open: false })\r\n\r\n    handleSubmit = () => {\r\n        this.close();\r\n        this.props.handleSubmit(this.state)\r\n    }\r\n\r\n    handleChange = (e, { name, value }) => this.setState({ [name]: Number(value) })\r\n\r\n    render() {\r\n\r\n        return (\r\n            <Modal \r\n            open={this.state.open}\r\n            onClose={this.close}\r\n            trigger={<Button onClick={this.open} basic color='purple' size='massive' fluid circular>Change settings</Button>} \r\n            centered={false} \r\n            size={'tiny'} >\r\n                <Modal.Header>Settings:</Modal.Header>\r\n                <Modal.Content>\r\n                    <Form size='small' unstackable widths=\"equal\" onSubmit={this.handleSubmit}>\r\n                        <Form.Group inline>\r\n                            <Form.Field>\r\n                                <label >Preparation: </label>\r\n                            </Form.Field>\r\n                            <Form.Field>\r\n                                <Input name=\"prepMinutes\" placeholder={this.state.prepMinutes+\" min\"} type='tel' onChange={this.handleChange}/>\r\n                            </Form.Field>\r\n                            <Form.Field>\r\n                                <Input name=\"prepSeconds\" placeholder={this.state.prepSeconds+\" sec\"} type='tel' onChange={this.handleChange}/>\r\n                            </Form.Field>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group inline>\r\n                            <Form.Field>\r\n                                <label >Climbing: </label>\r\n                            </Form.Field>\r\n                            <Form.Field>\r\n                                <Input name=\"climbMinutes\" placeholder={this.state.climbMinutes+\" min\"} type='tel' onChange={this.handleChange}/>\r\n                            </Form.Field>\r\n                            <Form.Field>\r\n                                <Input name=\"climbSeconds\" placeholder={this.state.climbSeconds+\" sec\"} type='tel' onChange={this.handleChange}/>\r\n                            </Form.Field>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group inline>\r\n                            <Form.Field>\r\n                                <label >Resting: </label>\r\n                            </Form.Field>\r\n                            <Form.Field>\r\n                                <Input name=\"restMinutes\" placeholder={this.state.restMinutes+\" min\"} type='tel' onChange={this.handleChange}/>\r\n                            </Form.Field>\r\n                            <Form.Field>\r\n                                <Input name=\"restSeconds\" placeholder={this.state.restSeconds+\" sec\"} type='tel' onChange={this.handleChange}/>\r\n                            </Form.Field>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group>\r\n                            <Form.Input\r\n                                fluid\r\n                                name=\"cycles\"\r\n                                label='Cycles:'\r\n                                placeholder={this.state.cycles}\r\n                                onChange={this.handleChange}\r\n                            />\r\n                            <Form.Input\r\n                                fluid\r\n                                name=\"reduceRestByPercent\"\r\n                                label='Cut rest by % each cycle'\r\n                                placeholder={this.state.reduceRestByPercent+\"%\"}\r\n                                onChange={this.handleChange}\r\n                            />\r\n                        </Form.Group>\r\n\r\n                        <Button type='submit' color='blue'>Submit</Button>\r\n\r\n                    </Form>\r\n                </Modal.Content>\r\n            </Modal>\r\n        );\r\n    };\r\n\r\n};\r\n\r\nexport default TimerSettings;","import React from 'react';\r\nimport { Table } from \"semantic-ui-react\";\r\nimport './TimerDisplay.css';\r\n\r\nclass Timer extends React.Component {\r\n\r\n    render() {\r\n\r\n        const colorOfSeconds = (this.props.climberActivity === \"Climbing\" ? 'red' : '#A333C8')\r\n\r\n        return (\r\n        <div >\r\n            \r\n            <Table color='purple' key='timerDisplay' inverted textAlign='center' size='large'>\r\n                <Table.Body>\r\n                    <Table.Row>\r\n                        <Table.Cell colSpan='3'>Cycle: {Math.ceil(this.props.currentCycleIndex/2) || 1}/{this.props.lastCycleIndex/2}</Table.Cell>\r\n                    </Table.Row>\r\n                    <Table.Row>\r\n                        <Table.Cell colSpan='3'>{this.props.climberActivity}</Table.Cell>\r\n                    </Table.Row>\r\n                </Table.Body>\r\n            </Table>\r\n\r\n            <div \r\n            id=\"timerSecondsDisplay\" \r\n            style={{backgroundColor:colorOfSeconds}}\r\n            onClick={this.props.setPause}>\r\n                {this.props.secondsLeft}\r\n            </div>\r\n            \r\n        </div>\r\n        );\r\n    };\r\n\r\n\r\n};\r\n\r\nexport default Timer;","const AudioContext = new window.audioContext() || new window.AudioContext() || new window.webkitAudioContext()\r\n\r\nclass Beeper extends AudioContext{\r\n    constructor() {\r\n        super();\r\n        \r\n        this.type = 'triangle';\r\n    }\r\n\r\n    start(duration) {\r\n        const oscillator = this.createOscillator();\r\n        const gainNode = this.createGain();\r\n\r\n        oscillator.connect(gainNode);\r\n        gainNode.connect(this.destination);\r\n\r\n        gainNode.gain.value = 1;\r\n\r\n        if (oscillator.noteOn) oscillator.noteOn(0);\r\n        if (oscillator.start) oscillator.start();\r\n\r\n        setTimeout(() => {\r\n            if (oscillator.noteOff) oscillator.noteOff(0);\r\n            if (oscillator.stop) oscillator.stop();\r\n        }, duration);\r\n\r\n    }\r\n}\r\n\r\nexport default Beeper","import React from 'react';\r\nimport TimerDisplay from './TimerDisplay';\r\nimport { Modal, Button } from \"semantic-ui-react\";\r\nimport Beeper from './Beeper';\r\n\r\nclass TimerDriver extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.beeper = new Beeper();\r\n\r\n        this.state = {\r\n            endCycleAt: Date.now() + (this.props.prepareTime * 1000),\r\n            currentTime: Date.now(),\r\n            secondsLeft: this.props.prepareTime,\r\n            restingDuration: this.props.initialRestingDuration * 1000,\r\n            climberActivity: \"Prepare\",\r\n            currentCycleIndex: 0,\r\n            lastCycleIndex: this.props.cycles,\r\n            open: false,\r\n            pause: false\r\n        };\r\n    };\r\n\r\n    componentDidUpdate(prevProps, nextState) {\r\n        if(this.state.open) {\r\n            if(!this.state.pause) {\r\n                if (nextState.secondsLeft !== this.state.secondsLeft) {\r\n                    this.beepAndVibrate();\r\n                };\r\n                this.countdown();\r\n            };\r\n        };\r\n    };\r\n\r\n    setPause = () => {\r\n        this.setState({ \r\n            pause: !this.state.pause,\r\n            endCycleAt: Date.now() - (this.state.secondsLeft * 1000),\r\n            currentTime: Date.now()\r\n        });\r\n    };\r\n\r\n    close = () => this.setState({ open: false });\r\n\r\n    resetTimer = () => {\r\n        this.setState({\r\n            endCycleAt: Date.now() + (this.props.prepareTime * 1000),\r\n            currentTime: Date.now(),\r\n            secondsLeft: this.props.prepareTime,\r\n            restingDuration: this.props.initialRestingDuration * 1000,\r\n            climberActivity: \"Prepare\",\r\n            currentCycleIndex: 0,\r\n            lastCycleIndex: this.props.cycles,\r\n            open: true,\r\n            pause: false\r\n        });\r\n    };\r\n\r\n    beepAndVibrate = () => {\r\n        if (this.state.secondsLeft <= 0) {\r\n            this.beeper.start(600);\r\n            navigator.vibrate(700);\r\n\r\n            this.changeActivity();\r\n        } \r\n        else if (this.state.secondsLeft <= 3) {\r\n            this.beeper.start(250);\r\n            navigator.vibrate(250);\r\n        };\r\n    }\r\n\r\n    countdown = () => {\r\n\r\n        setTimeout(() => {\r\n            this.setState({\r\n                currentTime: Date.now(),\r\n                secondsLeft: Math.ceil((this.state.endCycleAt - this.state.currentTime) / 1000),\r\n            });\r\n        }, 100);\r\n    };\r\n    \r\n\r\n    changeActivity = () => {\r\n        console.log(this.state.currentCycleIndex)\r\n        const activities = [\"Prepare\", \"Climbing\", \"Resting\", \"Finished\"];\r\n        \r\n        if (this.state.currentCycleIndex + 1 === this.state.lastCycleIndex) {\r\n            this.close();\r\n        }\r\n        else if ((this.state.currentCycleIndex + 1) % 2 !== 0) {\r\n            this.setState({\r\n                endCycleAt: Date.now() + (this.props.timeLeft * 1000),\r\n                currentTime: Date.now(),\r\n                secondsLeft: Math.ceil((this.state.endCycleAt - this.state.currentTime) / 1000),\r\n                climberActivity: activities[1],\r\n                currentCycleIndex: this.state.currentCycleIndex + 1\r\n            });\r\n        }\r\n        else {\r\n            const restingTime = this.state.restingDuration;\r\n\r\n            const futureRest = Math.round(restingTime - (restingTime * (this.props.reduceRestByPercent / 100))) || 1;\r\n\r\n            this.setState({\r\n                endCycleAt: Date.now() + restingTime,\r\n                currentTime: Date.now(),\r\n                secondsLeft: Math.ceil((this.state.endCycleAt - this.state.currentTime) / 1000),\r\n                restingDuration: futureRest,\r\n                climberActivity: activities[2],\r\n                currentCycleIndex: this.state.currentCycleIndex + 1\r\n            });\r\n        };\r\n    };\r\n\r\n    render() {\r\n        \r\n        return (\r\n            <Modal\r\n                open={this.state.open}\r\n                onClose={this.close}\r\n                trigger={\r\n                    <Button onClick={this.resetTimer} \r\n                        color='green' \r\n                        size='massive' \r\n                        fluid \r\n                        circular>\r\n                        Start\r\n                    </Button>\r\n                }\r\n            >\r\n                <Modal.Header>\r\n                    Interval\r\n                    <Button \r\n                        inverted\r\n                        circular\r\n                        color='red'\r\n                        floated='right'\r\n                        attached='bottom'\r\n                        onClick={this.close}>\r\n                        Close\r\n                    </Button>\r\n                    </Modal.Header>\r\n                <Modal.Content>\r\n                    <TimerDisplay \r\n                    lastCycleIndex={this.state.lastCycleIndex}\r\n                    currentCycleIndex={this.state.currentCycleIndex}\r\n                    climberActivity={this.state.climberActivity}\r\n                    secondsLeft={this.state.secondsLeft}\r\n                    setPause={this.setPause}\r\n                    />\r\n                </Modal.Content>\r\n            </Modal>\r\n                \r\n        );\r\n    };\r\n\r\n};\r\n\r\nexport default TimerDriver;","import React from 'react';\r\nimport CurrentSettingsDisplay from './CurrentSettingsDisplay';\r\nimport TimerSettings from './TimerSettings';\r\nimport TimerDriver from './TimerDriver';\r\nimport './App.css';\r\n\r\nclass App extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            prepareTime: 5,\r\n            timeLeft: 120,\r\n            initialRestingDuration: 120,\r\n            reduceRestByPercent: 50,\r\n            cycles: 4 * 2\r\n        };\r\n        \r\n    };\r\n\r\n    handleDataFromSettings = (data) => {\r\n        const prepareTime = (data.prepMinutes * 60) + data.prepSeconds;\r\n        const timeLeft = (data.climbMinutes * 60) + data.climbSeconds;\r\n        const initialRestingDuration = (data.restMinutes * 60) + data.restSeconds;\r\n\r\n        this.setState({\r\n            prepareTime: prepareTime,\r\n            timeLeft: timeLeft,\r\n            initialRestingDuration: initialRestingDuration,\r\n            reduceRestByPercent: data.reduceRestByPercent,\r\n            cycles: data.cycles * 2\r\n        });\r\n    };\r\n\r\n    render() {\r\n        \r\n        return (\r\n            <div id='mainContainer'>\r\n                <CurrentSettingsDisplay\r\n                    prepareTime={this.state.prepareTime}\r\n                    timeLeft={this.state.timeLeft}\r\n                    initialRestingDuration={this.state.initialRestingDuration}\r\n                    reduceRestByPercent={this.state.reduceRestByPercent}\r\n                    cycles={this.state.cycles}\r\n                />\r\n                <TimerSettings handleSubmit={this.handleDataFromSettings}></TimerSettings>\r\n                <br></br>\r\n                <TimerDriver\r\n                    prepareTime={this.state.prepareTime}\r\n                    timeLeft={this.state.timeLeft}\r\n                    initialRestingDuration={this.state.initialRestingDuration}\r\n                    reduceRestByPercent={this.state.reduceRestByPercent}\r\n                    cycles={this.state.cycles}>\r\n                </TimerDriver>\r\n                \r\n            </div>\r\n        );\r\n    };\r\n\r\n    \r\n};\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\n\r\nReactDOM.render(<App />, document.querySelector(\"#root\"));"],"sourceRoot":""}